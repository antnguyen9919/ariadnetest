import React from 'react'
import { useRouter } from 'next/router';
import { getPosts, getPostDetails } from '../../../services'
import BlogStyle from '../../../styles/Blog.module.scss'
import Head from 'next/head'
import {PostDetail,PostWidget, Author, BlogHeader, Categories, Loader} from '../../../components'



// export async function getStaticPaths({ locales }) { // Get available locales from `context`
//   const response = await axios.get('https://api.myappi.com/blog')
//   const posts = response.data

//   const paths = posts
//       .map((post) => locales.map((locale) => ({
//           params: { id: post.Id, title: post.Title },
//           locale // Pass locale here
//       })))
//       .flat() // Flatten array to avoid nested arrays

//   return { paths, fallback: false }
// }
const PostDetails = ({ post }) => {
  const router = useRouter();

  const { locales} = useRouter();
  
  if (router.isFallback) {
    return <Loader />;
  }
  return (
    <>
      <BlogHeader/>
      <div className={BlogStyle.blogBody}>
      <Head>
        <title>{post.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <link rel="icon" href="/ariadneicon.png" />
       </Head>
      <div className="container mx-auto px-10 mb-8">
        <div className="grid grid-cols-1 lg:grid-cols-12 gap-12">
          <div className="col-span-1 lg:col-span-8">
            <PostDetail post={post} />
            <Author author={post.author} />
            {/* <AdjacentPosts slug={post.slug} createdAt={post.createdAt} /> */}
            {/* <CommentsForm slug={post.slug} />
            <Comments slug={post.slug} /> */}
          </div>
          <div className="col-span-1 lg:col-span-4">
            <div className="relative lg:sticky top-8">
              <PostWidget slug={post.slug} categories={post.categories.map((category) => category.slug)} />
            
              <Categories />
            </div>
          </div>
        </div>
      </div>
      </div>
    </>
  )


}

export default PostDetails

export async function getStaticProps({params}) {
  const data = await getPostDetails(params.slug)
  return {
    props: {post: data},
  };
}

export async function getStaticPaths({locales}){
  const posts = await getPosts();
  
  const paths = posts
  .map(({node:{slug}}) => locales.map((locale) => ({
      params: { slug},
      locale
  })))
  .flat()

  return {
    paths,
    fallback: false,
  }
}